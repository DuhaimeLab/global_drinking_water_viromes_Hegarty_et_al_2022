# Processing of the contigs, VirSorter2

#to run snakemake: conda activate snakemake

#set a workflow config file
configfile: "Config/config_assemblies.yaml"
SAMPLE = config["samples"]

#if want to run on just some files
#SAMPLE = ["co-1"]

rule all_virsorter2:
    input:
        all="VirSorter2/vs2_merged_file.txt"

# download virsorter database in current directory
rule virsorter_db:
    output:
        "db-vs2/Done_all_setup"
    conda:
        "Envs/virsorter2.yaml"
    shell:
        "virsorter setup -d db-vs2 -j 4"

rule virsorter2:
    input:
        "Assemblies/{sample}_3000.fasta"
    output:
        out1="VirSorter2/{sample}/final-viral-score.tsv",
        out2="VirSorter2/{sample}/final-viral-boundary.tsv"
    params:
        path="Results/VirSorter2/",
        nodes="16"
    conda:
        "Envs/virsorter2.yaml"
    shell:
        "virsorter run --prep-for-dramv -w {params.path} -i {input} -j {params.nodes} all"

#to have wildcards in the input of a rule but not in the output of the rule
def table_inputs(folder, name, wildcards):
    files=expand("%s{sample}%s" % (folder, name), sample=SAMPLE)
    return files

rule merge_vs2:
    input:
        i=table_inputs(folder="VirSorter2/", name="/final-viral-score.tsv", wildcards=SAMPLE)
    params:
        s=SAMPLE
    output:
        o="VirSorter2/vs2_merged_file.txt"
    script:
        "Scripts/merge_virsorter2.py"